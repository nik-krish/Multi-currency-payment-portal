{"ast":null,"code":"var _jsxFileName = \"D:\\\\payment-app\\\\client\\\\src\\\\pages\\\\Payment.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useStripe, useElements, CardElement } from \"@stripe/react-stripe-js\";\nimport \"./payment.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Payment() {\n  _s();\n  const [amount, setAmount] = useState(\"\");\n  const [recipientEmail, setRecipientEmail] = useState(\"\");\n  const [recipientCountry, setRecipientCountry] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const [success, setSuccess] = useState(false);\n  const stripe = useStripe();\n  const elements = useElements();\n  const navigate = useNavigate();\n  const countryOptions = [{\n    code: \"USD\",\n    name: \"United States\"\n  }, {\n    code: \"INR\",\n    name: \"India\"\n  }, {\n    code: \"GBP\",\n    name: \"United Kingdom\"\n  }];\n  async function handlePayment(e) {\n    e.preventDefault();\n    if (!stripe || !elements) {\n      setError(\"Stripe is not loaded yet.\");\n      return;\n    }\n    try {\n      // Initiate payment and get client secret and transaction ID from the backend\n      const senderCurrency = \"USD\";\n      const response = await fetch(\"http://localhost:3001/api/pay\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: localStorage.getItem(\"token\") // JWT token\n        },\n        body: JSON.stringify({\n          amount\n        })\n      });\n      if (!response.ok) {\n        const errorData = await response.json();\n        setError(errorData.message || \"An error occurred while processing your payment. Please try again.\");\n        return;\n      }\n      const {\n        clientSecret,\n        transactionId,\n        exchangeRate\n      } = await response.json();\n      const convertedAmount = amount * exchangeRate; // Calculate the amount in recipient's currency\n\n      // Confirm payment with Stripe\n      const {\n        paymentIntent,\n        error: stripeError\n      } = await stripe.confirmCardPayment(clientSecret, {\n        payment_method: {\n          card: elements.getElement(CardElement)\n        }\n      });\n      if (stripeError) {\n        console.error(\"Stripe error:\", stripeError);\n        setError(\"Payment confirmation failed. Please try again.\");\n      } else if (paymentIntent.status === \"succeeded\") {\n        await fetch(\"http://localhost:3001/api/retrieve-payment-intent\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: localStorage.getItem(\"token\") // JWT token\n          },\n          body: JSON.stringify({\n            paymentIntentId: paymentIntent.id\n          })\n        });\n        setSuccess(true);\n        setTimeout(() => navigate(\"/dashboard\"), 2000);\n      } else {\n        setError(\"Payment failed. Please try again.\");\n      }\n    } catch (err) {\n      console.error(err);\n      setError(\"An error occurred while processing your payment. Please try again.\");\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Make a Payment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 17\n    }, this), success && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"success-message\",\n      children: \"Payment successful!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handlePayment,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Amount (in USD)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: amount,\n          onChange: e => setAmount(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Card Details\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-element-container\",\n          children: /*#__PURE__*/_jsxDEV(CardElement, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn btn-primary\",\n          children: \"Pay Now\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, this);\n}\n_s(Payment, \"w4SomLdYKAWq4sPkBbAQ+omRpBU=\", false, function () {\n  return [useStripe, useElements, useNavigate];\n});\n_c = Payment;\nexport default Payment;\nvar _c;\n$RefreshReg$(_c, \"Payment\");","map":{"version":3,"names":["React","useState","useNavigate","useStripe","useElements","CardElement","jsxDEV","_jsxDEV","Payment","_s","amount","setAmount","recipientEmail","setRecipientEmail","recipientCountry","setRecipientCountry","error","setError","success","setSuccess","stripe","elements","navigate","countryOptions","code","name","handlePayment","e","preventDefault","senderCurrency","response","fetch","method","headers","Authorization","localStorage","getItem","body","JSON","stringify","ok","errorData","json","message","clientSecret","transactionId","exchangeRate","convertedAmount","paymentIntent","stripeError","confirmCardPayment","payment_method","card","getElement","console","status","paymentIntentId","id","setTimeout","err","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","target","required","_c","$RefreshReg$"],"sources":["D:/payment-app/client/src/pages/Payment.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useStripe, useElements, CardElement } from \"@stripe/react-stripe-js\";\r\nimport \"./payment.css\";\r\n\r\nfunction Payment() {\r\n  const [amount, setAmount] = useState(\"\");\r\n  const [recipientEmail, setRecipientEmail] = useState(\"\");\r\n  const [recipientCountry, setRecipientCountry] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  const [success, setSuccess] = useState(false);\r\n\r\n  const stripe = useStripe();\r\n  const elements = useElements();\r\n  const navigate = useNavigate();\r\n\r\n  const countryOptions = [\r\n    { code: \"USD\", name: \"United States\" },\r\n    { code: \"INR\", name: \"India\" },\r\n    { code: \"GBP\", name: \"United Kingdom\" },\r\n  ];\r\n\r\n  async function handlePayment(e) {\r\n    e.preventDefault();\r\n    if (!stripe || !elements) {\r\n      setError(\"Stripe is not loaded yet.\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      // Initiate payment and get client secret and transaction ID from the backend\r\n      const senderCurrency = \"USD\";\r\n      const response = await fetch(\"http://localhost:3001/api/pay\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: localStorage.getItem(\"token\"), // JWT token\r\n        },\r\n        body: JSON.stringify({\r\n          amount,\r\n        }),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        const errorData = await response.json();\r\n        setError(\r\n          errorData.message ||\r\n            \"An error occurred while processing your payment. Please try again.\"\r\n        );\r\n        return;\r\n      }\r\n\r\n      const { clientSecret, transactionId, exchangeRate } =\r\n        await response.json();\r\n      const convertedAmount = amount * exchangeRate; // Calculate the amount in recipient's currency\r\n\r\n      // Confirm payment with Stripe\r\n      const { paymentIntent, error: stripeError } =\r\n        await stripe.confirmCardPayment(clientSecret, {\r\n          payment_method: {\r\n            card: elements.getElement(CardElement),\r\n          },\r\n        });\r\n\r\n      if (stripeError) {\r\n        console.error(\"Stripe error:\", stripeError);\r\n        setError(\"Payment confirmation failed. Please try again.\");\r\n      } else if (paymentIntent.status === \"succeeded\") {\r\n        await fetch(\"http://localhost:3001/api/retrieve-payment-intent\", {\r\n          method: \"POST\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: localStorage.getItem(\"token\"), // JWT token\r\n          },\r\n          body: JSON.stringify({ paymentIntentId: paymentIntent.id }),\r\n        });\r\n        setSuccess(true);\r\n        setTimeout(() => navigate(\"/dashboard\"), 2000);\r\n      } else {\r\n        setError(\"Payment failed. Please try again.\");\r\n      }\r\n    } catch (err) {\r\n      console.error(err);\r\n      setError(\r\n        \"An error occurred while processing your payment. Please try again.\"\r\n      );\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h1>Make a Payment</h1>\r\n      {error && <p className=\"error-message\">{error}</p>}\r\n      {success && <p className=\"success-message\">Payment successful!</p>}\r\n      <form onSubmit={handlePayment}>\r\n        <div className=\"form-group\">\r\n          <label>Amount (in USD)</label>\r\n          <input\r\n            type=\"number\"\r\n            value={amount}\r\n            onChange={(e) => setAmount(e.target.value)}\r\n            required\r\n          />\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n          <label>Card Details</label>\r\n          <div className=\"card-element-container\">\r\n            <CardElement />\r\n          </div>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <button type=\"submit\" className=\"btn btn-primary\">\r\n            Pay Now\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Payment;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}