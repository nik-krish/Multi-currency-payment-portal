{"ast":null,"code":"var _jsxFileName = \"D:\\\\payment-app\\\\client\\\\src\\\\pages\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport jwt from \"jsonwebtoken\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const navigate = useNavigate();\n  const [dashboard, setDashboard] = useState(\"\");\n  const [tempDashboard, setTempDashboard] = useState(\"\");\n  async function populateDashboard() {\n    const req = await fetch(\"http://localhost:3001/api/dashboard\", {\n      headers: {\n        \"x-access-token\": localStorage.getItem(\"token\")\n      }\n    });\n    const data = await req.json(); // Use `await` here\n    if (data.status === \"ok\") {\n      setDashboard(data.dashboard);\n    } else {\n      alert(data.console.error);\n    }\n    console.log(data);\n  }\n  useEffect(() => {\n    const token = localStorage.getItem(\"token\");\n    if (token) {\n      const user = jwt.decode(token);\n      if (!user) {\n        localStorage.removeItem(\"token\");\n        navigate(\"/login\");\n      } else {\n        populateDashboard();\n      }\n    }\n  }, [navigate]);\n  async function updateDashboard() {\n    const req = await fetch(\"http://localhost:3001/api/dashboard\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"x-access-token\": localStorage.getItem(\"token\")\n      },\n      body: JSON.stringify({\n        dashboard: tempDashboard\n      })\n    });\n    const data = await req.json(); // Use `await` here\n    if (data.status === \"ok\") {\n      setTempDashboard(\"\");\n      setDashboard(data.dashboard);\n    } else {\n      alert(data.console.error);\n    }\n    console.log(data);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Dashboard: \", dashboard || \"Not Found\", \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: e => {\n        e.preventDefault();\n        updateDashboard();\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"dashboard\",\n        value: tempDashboard,\n        onChange: e => setTempDashboard(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"Update\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"NG9NWQXufPgx1wZF7EypziRj7No=\", false, function () {\n  return [useNavigate];\n});\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useEffect","useState","jwt","useNavigate","jsxDEV","_jsxDEV","Dashboard","_s","navigate","dashboard","setDashboard","tempDashboard","setTempDashboard","populateDashboard","req","fetch","headers","localStorage","getItem","data","json","status","alert","console","error","log","token","user","decode","removeItem","updateDashboard","method","body","JSON","stringify","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","e","preventDefault","type","placeholder","value","onChange","target","_c","$RefreshReg$"],"sources":["D:/payment-app/client/src/pages/Dashboard.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport jwt from \"jsonwebtoken\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst Dashboard = () => {\r\n  const navigate = useNavigate();\r\n  const [dashboard, setDashboard] = useState(\"\");\r\n  const [tempDashboard, setTempDashboard] = useState(\"\");\r\n\r\n  async function populateDashboard() {\r\n    const req = await fetch(\"http://localhost:3001/api/dashboard\", {\r\n      headers: {\r\n        \"x-access-token\": localStorage.getItem(\"token\"),\r\n      },\r\n    });\r\n    const data = await req.json(); // Use `await` here\r\n    if (data.status === \"ok\") {\r\n      setDashboard(data.dashboard);\r\n    } else {\r\n      alert(data.console.error);\r\n    }\r\n    console.log(data);\r\n  }\r\n\r\n  useEffect(() => {\r\n    const token = localStorage.getItem(\"token\");\r\n    if (token) {\r\n      const user = jwt.decode(token);\r\n      if (!user) {\r\n        localStorage.removeItem(\"token\");\r\n        navigate(\"/login\");\r\n      } else {\r\n        populateDashboard();\r\n      }\r\n    }\r\n  }, [navigate]);\r\n\r\n  async function updateDashboard() {\r\n    const req = await fetch(\"http://localhost:3001/api/dashboard\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"x-access-token\": localStorage.getItem(\"token\"),\r\n      },\r\n      body: JSON.stringify({ dashboard: tempDashboard }),\r\n    });\r\n    const data = await req.json(); // Use `await` here\r\n    if (data.status === \"ok\") {\r\n      setTempDashboard(\"\");\r\n      setDashboard(data.dashboard);\r\n    } else {\r\n      alert(data.console.error);\r\n    }\r\n    console.log(data);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1>Dashboard: {dashboard || \"Not Found\"} </h1>\r\n      <form\r\n        onSubmit={(e) => {\r\n          e.preventDefault();\r\n          updateDashboard();\r\n        }}\r\n      >\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"dashboard\"\r\n          value={tempDashboard}\r\n          onChange={(e) => setTempDashboard(e.target.value)}\r\n        />\r\n        <input type=\"submit\" value=\"Update\" />\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}